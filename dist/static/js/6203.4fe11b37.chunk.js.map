{"version":3,"file":"static/js/6203.4fe11b37.chunk.js","mappings":"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","sources":["Hooks/useRole.js","views/Admin/Roles/CreateRole.js","../node_modules/@mui/material/FormHelperText/formHelperTextClasses.js","../node_modules/@mui/material/FormHelperText/FormHelperText.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useRole = () => {\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const navigate = useNavigate();\r\n\r\n  const access_token = localStorage.getItem(\"auth-token\");\r\n\r\n  const [roles, setAllRoles] = useState([]);\r\n  const [staffRoles, setStaffRoles] = useState([]);\r\n  const [roleForStaff, setRoleForStaff] = useState([]);\r\n  const [responseMessage, setResponseMessage] = useState(\"\");\r\n\r\n  const getRoles = async () => {\r\n    await axios\r\n      .get(`${BASE_URL}/roles/`, {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(`from hhok`, response.data.data.allRole)\r\n        setAllRoles(response.data.data.allRole);\r\n        // console.log(response.data.data.allRooms)\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log(\"An error occured\", data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log(\"An error with status 403 occured\", data.message);\r\n            setResponseMessage(data.message);\r\n          } else {\r\n            console.log(\"Axios error:\", error);\r\n          }\r\n        } else {\r\n          console.log(\"Network error:\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  // consider this as 'getSTaffRoleById'\r\n  const getStaffRoles = async (staffId) => {\r\n    // console.log(staffId)\r\n    await axios\r\n      .get(`${BASE_URL}user-role/?userId=${staffId}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(\r\n          `response is`,\r\n          JSON.stringify(response.data.data.userRole, null, 2)\r\n        );\r\n        setStaffRoles(response.data.data.userRole);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log(\"An error occurred\", data.message);\r\n          } else {\r\n            console.log(\"Axios error:\", error);\r\n          }\r\n        } else {\r\n          console.log(\"Network error:\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getRoleForStaff = async () => {\r\n    await axios\r\n      .get(`${BASE_URL}roles/staff`, {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n      })\r\n      .then((response) => {\r\n        setRoleForStaff(response.data.data.userRoles);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log(\"An error occurred\", data.message);\r\n          } else {\r\n            console.log(\"Axios error:\", error);\r\n          }\r\n        } else {\r\n          console.log(\"Network error:\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const assignUserRole = async (roleData) => {\r\n    await axios\r\n      .post(`${BASE_URL}roles/assign`, roleData, {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n      })\r\n      .then((response) => {\r\n        navigate(\"/home/role\");\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            navigate(\"/home/role\");\r\n            // console.log(\"An error occured\", data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            navigate(\"/\");\r\n          } else {\r\n            console.log(\"Axios error:\", error);\r\n          }\r\n        } else {\r\n          console.log(\"Network error:\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const addRole = async (roleName) => {\r\n    await axios\r\n      .post(\r\n        `${BASE_URL}/roles/add`,\r\n        { role_name: roleName },\r\n        { headers: { Authorization: `Bearer ${access_token}` } }\r\n      )\r\n      .then((response) => {\r\n        navigate(\"/home/role\");\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log(\"An error occured\", data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log(\"An error with status 403 occured\", data.message);\r\n            setResponseMessage(data.message);\r\n          } else {\r\n            console.log(\"Axios error:\", error);\r\n          }\r\n        } else {\r\n          console.log(\"Network error:\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteRole = async (roleId) => {\r\n    await axios\r\n      .delete(`${BASE_URL}roles/delete?roleId=${roleId}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log(\"An error occured\", data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log(\"An error with status 403 occured\", data.message);\r\n            setResponseMessage(data.message);\r\n          } else {\r\n            console.log(\"Axios error:\", error);\r\n          }\r\n        } else {\r\n          console.log(\"Network error:\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const revokeUserRole = async (roleIds) => {\r\n    await axios\r\n      .post(`${BASE_URL}user-role/delete`, roleIds, {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n      })\r\n      .then((response) => {\r\n        navigate(\"/home/role/staff\");\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log(\"An error occured\", data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log(\"An error with status 403 occured\", data.message);\r\n            setResponseMessage(data.message);\r\n          } else {\r\n            console.log(\"Axios error:\", error);\r\n          }\r\n        } else {\r\n          console.log(\"Network error:\", error.message);\r\n        }\r\n      });\r\n  };\r\n  return {\r\n    getRoles,\r\n    roles,\r\n    getStaffRoles,\r\n    staffRoles,\r\n    assignUserRole,\r\n    addRole,\r\n    deleteRole,\r\n    getRoleForStaff,\r\n    roleForStaff,\r\n    revokeUserRole\r\n  };\r\n};\r\nexport default useRole;\r\n","import { useState } from \"react\";\r\nimport { TextField, Button, Typography, Grid } from \"@mui/material\";\r\nimport useRole from \"Hooks/useRole\";\r\n\r\nconst CreateRole = () => {\r\n    const [roleName, setRoleName] = useState('');\r\n    const { addRole } = useRole();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await addRole(roleName);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h2\">Add Role</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        label=\"Role Name\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={roleName}\r\n                        onChange={(event) => setRoleName(event.target.value)}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={roleName === '' || roleName.length <= 2}\r\n                        style={{ marginTop: \"12px\" }}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CreateRole;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormHelperTextUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormHelperText', slot);\n}\nconst formHelperTextClasses = generateUtilityClasses('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);\nexport default formHelperTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  [`&.${formHelperTextClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  },\n  [`&.${formHelperTextClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}, ownerState.size === 'small' && {\n  marginTop: 4\n}, ownerState.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n  const {\n      children,\n      className,\n      component = 'p'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  const ownerState = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ? // notranslate needed while Google Translate will not fix zero-width space issue\n    _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n      className: \"notranslate\",\n      children: \"\\u200B\"\n    })) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default FormHelperText;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;"],"names":["useRole","BASE_URL","process","navigate","useNavigate","access_token","localStorage","getItem","roles","setAllRoles","useState","staffRoles","setStaffRoles","roleForStaff","setRoleForStaff","responseMessage","setResponseMessage","getRoles","async","axios","get","concat","headers","Authorization","then","response","data","allRole","catch","error","status","message","console","log","getStaffRoles","staffId","JSON","stringify","userRole","assignUserRole","post","roleData","addRole","role_name","roleName","deleteRole","delete","roleId","getRoleForStaff","userRoles","revokeUserRole","roleIds","CreateRole","setRoleName","_jsxs","Grid","container","spacing","children","_jsx","item","xs","Typography","variant","onSubmit","event","preventDefault","TextField","label","fullWidth","value","onChange","target","Button","type","color","disabled","length","style","marginTop","getFormHelperTextUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","FormHelperTextRoot","styled","name","overridesResolver","props","styles","ownerState","root","size","capitalize","contained","filled","_ref","theme","_extends","vars","palette","text","secondary","typography","caption","textAlign","marginRight","marginBottom","marginLeft","formHelperTextClasses","main","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","focused","required","classes","slots","composeClasses","useUtilityClasses","as","clsx","getTextFieldUtilityClass","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","TextFieldRoot","FormControl","autoComplete","autoFocus","defaultValue","FormHelperTextProps","helperText","id","idOverride","InputLabelProps","inputProps","InputProps","inputRef","maxRows","minRows","multiline","onBlur","onFocus","placeholder","rows","select","SelectProps","InputMore","shrink","notched","native","undefined","useId","helperTextId","inputLabelId","InputComponent","InputElement","InputLabel","htmlFor","Select","labelId","input","FormHelperText"],"sourceRoot":""}