{"version":3,"file":"static/js/3413.75091a20.chunk.js","mappings":"qKAGA,MA8KA,EA9KgBA,KACd,MAAMC,EAAWC,gCAEXC,GAAWC,EAAAA,EAAAA,OACVC,EAAiBC,IAAsBC,EAAAA,EAAAA,aACvCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,KAC1CK,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,IAEpCO,EAAYC,IAAgBR,EAAAA,EAAAA,YAE7BS,EAAeC,aAAaC,QAAQ,cAqJ1C,MAAO,CACLC,QApJcC,UAEdP,GAAa,SACPQ,EAAAA,EACHC,KAAK,GAADC,OAAItB,EAAQ,oBAAoBuB,EAAU,CAC7CC,QAAS,CAAEC,cAAc,UAADH,OAAYP,MAErCW,MAAKC,IAEJf,GAAa,GACbP,EAAmBsB,EAASC,KAAKC,SACjC3B,EAAS,mBAAmB,IAE7B4B,OAAMC,IAEL,GADAnB,GAAa,GACTmB,EAAMJ,SAAU,CAClB,MAAM,OAAEK,EAAM,KAAEJ,GAASG,EAAMJ,SAChB,MAAXK,GAAkBJ,GAAQA,EAAKC,SACjCxB,EAAmBuB,EAAKC,SACxBI,QAAQC,IAAI,mBAAoBN,EAAKC,UACjB,MAAXG,GAAkBJ,GAAQA,EAAKC,SACxCI,QAAQC,IAAI,mCAAoCN,EAAKC,SACrDxB,EAAmBuB,EAAKC,UAExBI,QAAQC,IAAI,eAAgBH,EAEhC,MACEE,QAAQC,IAAI,iBAAkBH,EAAMF,QACtC,GACA,EAwHJzB,kBACA+B,QAtHchB,UACdP,GAAa,SACPQ,EAAAA,EACHgB,IAAI,GAADd,OAAItB,EAAQ,aAAa,CAC3BwB,QAAS,CAAEC,cAAc,UAADH,OAAYP,MAErCW,MAAKC,IACJf,GAAa,GACbJ,EAAYmB,EAASC,KAAKA,KAAKrB,UAC/BO,EAAaa,EAASC,KAAKA,KAAKrB,SAAS8B,OAAO,IAGjDP,OAAMC,IAEL,GADAnB,GAAa,GACTmB,EAAMJ,SAAU,CAClB,MAAM,OAAEK,EAAM,KAAEJ,GAASG,EAAMJ,SAChB,MAAXK,GAAkBJ,GAAQA,EAAKC,SACjCxB,EAAmBuB,EAAKC,SACxBI,QAAQC,IAAI,mBAAoBN,EAAKC,UACjB,MAAXG,GAAkBJ,GAAQA,EAAKC,SACxCI,QAAQC,IAAI,mCAAoCN,EAAKC,SACrDxB,EAAmBuB,EAAKC,UAExBI,QAAQC,IAAI,eAAgBH,EAEhC,MACEE,QAAQC,IAAI,iBAAkBH,EAAMF,QACtC,GACA,EA2FJtB,WACA+B,YAzFkBnB,gBACZC,EAAAA,EACHgB,IAAI,GAADd,OAAItB,EAAQ,4BAAAsB,OAA2BiB,GAAM,CAC/Cf,QAAS,CAAEC,cAAc,UAADH,OAAYP,MAErCW,MAAKC,IACJjB,EAAgBiB,EAASC,KAAKA,MAC9BK,QAAQC,IAAI,OAAOP,EAASC,KAAKA,KAAK,IAEvCE,OAAMC,IACL,GAAIA,EAAMJ,SAAU,CAClB,MAAM,OAAEK,EAAM,KAAEJ,GAASG,EAAMJ,SAChB,MAAXK,GAAkBJ,GAAQA,EAAKC,SACjCxB,EAAmBuB,EAAKC,SACxBI,QAAQC,IAAI,mBAAoBN,EAAKC,UACjB,MAAXG,GAAkBJ,GAAQA,EAAKC,SACxCI,QAAQC,IAAI,mCAAoCN,EAAKC,SACrDxB,EAAmBuB,EAAKC,UAExBI,QAAQC,IAAI,eAAgBH,EAEhC,MACEE,QAAQC,IAAI,iBAAkBH,EAAMF,QACtC,GACA,EAkEJpB,eACA+B,iBAhEuBrB,gBACjBC,EAAAA,EACHqB,IAAI,GAADnB,OAAItB,EAAQ,oBAAoBuB,EAAU,CAC5CC,QAAS,CAAEC,cAAc,UAADH,OAAYP,MAErCW,MAAKC,IAEJtB,EAAmBsB,EAASC,KAAKC,SACjC3B,EAAS,mBAAmB,IAE7B4B,OAAMC,IACL,GAAIA,EAAMJ,SAAU,CAClB,MAAM,OAAEK,EAAM,KAAEJ,GAASG,EAAMJ,SAChB,MAAXK,GAAkBJ,GAAQA,EAAKC,SACjCxB,EAAmBuB,EAAKC,SACxBI,QAAQC,IAAI,mBAAoBN,EAAKC,UACjB,MAAXG,GAAkBJ,GAAQA,EAAKC,SACxCI,QAAQC,IAAI,mCAAoCN,EAAKC,SACrDxB,EAAmBuB,EAAKC,UAGxBI,QAAQC,IAAI,eAAgBH,EAEhC,MACEE,QAAQC,IAAI,iBAAkBH,EAAMF,QACtC,GACA,EAuCJa,WApCiBvB,gBACXC,EAAAA,EACHuB,OAAO,GAADrB,OAAItB,EAAQ,uBAAAsB,OAAsBsB,GAAU,CACjDpB,QAAS,CAAEC,cAAc,UAADH,OAAYP,MAErCW,MAAKC,IACJM,QAAQC,IAAIP,GACZzB,EAAS,mBAAmB,IAE7B4B,OAAMC,IACL,GAAIA,EAAMJ,SAAU,CAClB,MAAM,OAAEK,EAAM,KAAEJ,GAASG,EAAMJ,SAChB,MAAXK,GAAkBJ,GAAQA,EAAKC,SACjCxB,EAAmBuB,EAAKC,SACxBI,QAAQC,IAAI,mBAAoBN,EAAKC,UACjB,MAAXG,GAAkBJ,GAAQA,EAAKC,SACxCI,QAAQC,IAAI,mCAAoCN,EAAKC,SACrDxB,EAAmBuB,EAAKC,UAGxBI,QAAQC,IAAI,eAAgBH,EAEhC,MACEE,QAAQC,IAAI,iBAAkBH,EAAMF,QACtC,GACA,EAYJhB,aACAF,YACD,C,6DC3KH,MA6EA,EA7EuBkC,KACrB,MAAOC,EAAgBC,IAAqBzC,EAAAA,EAAAA,UAAS,KAC9CK,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,GACrCN,EAAWC,gCAEX+C,EAAQhC,aAAaC,QAAQ,cA+DnC,MAAO,CACLgC,kBAhBwB9B,UACxBP,GAAa,GACb,IACE,MAAMsC,QAAY9B,EAAAA,EAAMgB,IAAI,GAADd,OAAItB,EAAQ,sCAAsC,CAC3EwB,QAAS,CACPC,cAAc,UAADH,OAAY0B,MAG7BD,EAAkBG,EAAItB,KAAKA,KAC7B,CAAE,MAAOG,GACPE,QAAQF,MAAMA,EAChB,CAAC,QACCnB,GAAa,EACf,GAIAuC,kBAhCwBhC,UACxB,IACE,MAAM+B,QAAY9B,EAAAA,EAAMgB,IAAI,GAADd,OAAItB,EAAQ,mCAAAsB,OAAkC8B,GAAa,CACpF5B,QAAS,CACPC,cAAc,UAADH,OAAY0B,MAI7B,OADCf,QAAQC,IAAI,kBAAmBgB,EAAItB,KAAKA,MAClCsB,EAAItB,KAAKA,IAClB,CAAE,MAAOG,GAEP,OADAE,QAAQF,MAAM,kCAAmCA,GAC1C,IACT,GAqBAsB,oBAhD0BlC,UAC1B,IAOE,aANkBC,EAAAA,EAAMgB,IAAI,GAADd,OAAItB,EAAQ,uCAAAsB,OAAsCgC,GAAe,CAC1F9B,QAAS,CACPC,cAAc,UAADH,OAAY0B,OAIlBpB,KAAKA,IAClB,CAAE,MAAOG,GAEP,OADAE,QAAQF,MAAM,oCAAqCA,GAC5C,IACT,GAqCAwB,eAlEqBpC,UACrB,IACE,MAAM+B,QAAY9B,EAAAA,EAAMgB,IAAI,GAADd,OAAItB,EAAQ,8BAAAsB,OAA6BsB,GAAU,CAC5EpB,QAAS,CACPC,cAAc,UAADH,OAAY0B,MAI7B,OADAf,QAAQC,IAAI,6BAA8BgB,EAAItB,KAAKA,MAC5CsB,EAAItB,KAAKA,IAClB,CAAE,MAAOG,GAIP,OAHAE,QAAQF,MAAM,+BAAgCA,GAGvC,IACT,GAqDAe,iBACAnC,YACD,C,yGCxEH,MAsGA,EAtGuB6C,IAAsC,IAArC,KAAEC,EAAI,SAAEC,EAAQ,YAAEC,GAAaH,EACrD,MAAOI,EAAWC,IAAgBvD,EAAAA,EAAAA,WAAS,GAK3C,OACEwD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,KAAMP,EACNQ,QANmBC,IAAMR,GAAa,GAOtC,kBAAgB,wBAChB,mBAAiB,8BACjBS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAChBT,UAEFC,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CACFC,GAAI,CACFC,gBAAiB,QACjBC,QAAS,OACTC,aAAc,OACdC,UAAW,kCACXC,MAAO,OACPC,UAAW,OACXC,UAAW,QACXlB,SAEDL,GAAeA,EAAYtB,OAAS,EACnCsB,EAAYwB,KAAI,CAACC,EAAYC,KAC3BvB,EAAAA,EAAAA,MAAA,OAEEC,UAAU,aACVO,MAAO,CAAEgB,aAAc,OAAQT,QAAS,OAAQD,gBAAiBS,EAAQ,IAAM,EAAI,UAAY,WAAYrB,SAAA,EAE3GF,EAAAA,EAAAA,MAACyB,EAAAA,EAAU,CAACC,QAAQ,KAAKzB,UAAU,YAAWC,SAAA,CAAC,SACtCoB,EAAWK,cAAcC,aAElC5B,EAAAA,EAAAA,MAACyB,EAAAA,EAAU,CAACC,QAAQ,QAAQzB,UAAU,YAAWC,SAAA,CAAC,cACpCN,MAEdI,EAAAA,EAAAA,MAACyB,EAAAA,EAAU,CAACC,QAAQ,QAAQzB,UAAU,SAASO,MAAO,CAAEqB,MAAOP,EAAWQ,YAAc,UAAY,WAAY5B,SAAA,CAAC,WACtGoB,EAAWQ,YAAc,YAAc,oBAElD3B,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACC,QAAQ,KAAKzB,UAAU,gBAAeC,SAAC,WAGlDoB,EAAWS,OAAST,EAAWS,MAAMxD,OAAS,EAC7C+C,EAAWS,MAAMV,KAAI,CAACW,EAAMC,KAC1BjC,EAAAA,EAAAA,MAACY,EAAAA,EAAG,CAAiBX,UAAU,OAAOO,MAAO,CAAEO,QAAS,OAAQD,gBAAiBkB,EAAKE,OAAS,UAAY,WAAYhC,SAAA,EACrHF,EAAAA,EAAAA,MAACyB,EAAAA,EAAU,CAACC,QAAQ,QAAQzB,UAAU,YAAYO,MAAO,CAAEqB,MAAOG,EAAKE,OAAS,UAAY,WAAYhC,SAAA,CAAC,cAC3F8B,EAAKrC,SAEnBK,EAAAA,EAAAA,MAACyB,EAAAA,EAAU,CAACC,QAAQ,QAAQzB,UAAU,cAAcO,MAAO,CAAEqB,MAAOG,EAAKE,OAAS,UAAY,WAAYhC,SAAA,CAAC,gBAC3F8B,EAAKE,OAAS,OAAS,aAEvB,UAAfF,EAAKG,QACJhC,EAAAA,EAAAA,KAAA,OACEiC,IAAKJ,EAAKG,MACVE,IAAKL,EAAKrC,KACVM,UAAU,aACVO,MAAO,CAAEU,MAAO,QAASoB,OAAQ,QAAStB,aAAc,MAAOuB,UAAW,YAZtEN,MAkBZ9B,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACC,QAAQ,QAAQzB,UAAU,WAAUC,SAAC,0BApC9CqB,MA2CTpB,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACC,QAAQ,QAAQzB,UAAU,aAAYC,SAAC,+BAOzDF,EAAAA,EAAAA,MAACY,EAAAA,EAAG,CACFH,QAAQ,OACR+B,OAAQ,EACR7B,eAAe,gBACfD,WAAW,SACX+B,QAAQ,UACR1B,QAAS,EACTC,aAAc,EACdC,UAAW,EAAGf,SAAA,EAEdC,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACC,QAAQ,KAAIxB,SAAEP,KAC1BQ,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAAChB,QAAQ,WAAWiB,QA3FTC,IAAM7C,GAAa,GA2FeG,SAAC,sBAInD,C,4ICjGV,MA0DA,EA1DoB2C,KAClB,MAAM,SAAEpG,EAAQ,QAAE4B,IAAYpC,EAAAA,EAAAA,MACxB,eAAEwD,IAAmBV,EAAAA,EAAAA,MACpB+D,EAAaC,IAAkBvG,EAAAA,EAAAA,UAAS,CAAC,IACzCwG,EAAWC,IAAgBzG,EAAAA,EAAAA,WAAS,IACpC0G,EAASC,IAAc3G,EAAAA,EAAAA,WAAS,GA6BvC,OA3BA4G,EAAAA,EAAAA,YAAU,KACR/E,GAAS,GACR,KAEH+E,EAAAA,EAAAA,YAAU,KACiB/F,WACvB,GAAIZ,EAAS8B,OAAS,IAAMyE,EAAW,CACrCG,GAAW,GACX,MAAME,EAAkB5G,EAAS4E,KAAIiC,GAAQ7D,EAAe6D,EAAKC,OAC3DC,QAAkBC,QAAQC,IAAIL,GAE9BM,EAAa,CAAC,EACpBlH,EAASmH,SAAQ,CAACN,EAAM/B,KACtBoC,EAAWL,EAAKC,KAAOC,EAAUjC,EAAM,IAGzCwB,EAAeY,GACfR,GAAW,GACXF,GAAa,EACf,GAGFY,EAAkB,GACjB,KAKD7D,EAAAA,EAAAA,MAACY,EAAAA,EAAG,CACFC,GAAI,CACFM,UAAW,QACX2C,SAAU,QACV5D,SAAA,EAEFC,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACC,QAAQ,KAAKqC,EAAG,EAAGC,cAAY,EAAA9D,SAAC,iBAG3CgD,GACC/C,EAAAA,EAAAA,KAAC8D,EAAAA,EAAM,IACLxH,EAAS8B,OAAS,EACpB9B,EAAS4E,KAAIiC,IAEJnD,EAAAA,EAAAA,KAAC+D,EAAAA,EAAc,CAAgBvE,KAAM2D,EAAK1B,SAAUhC,SAAU0D,EAAKC,IAAK1D,YAAaiD,EAAYQ,EAAKC,MAAjFD,EAAKC,QAGnCpD,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACC,QAAQ,QAAOxB,SAAC,yBAE1B,C","sources":["Hooks/useRoom.js","Hooks/useWorkHistory.js","component/History Details/HistoryDetails.js","views/Admin/Work History/Room Work History/RoomHistory.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst useRoom = () => {\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  // const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const navigate = useNavigate();\r\n  const [responseMessage, setResponseMessage] = useState();\r\n  const [allRooms, setAllRooms] = useState([]);\r\n  const [allRoomsById, setAllRoomsById] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [roomsCount, setRoomCount] = useState();\r\n\r\n  const access_token = localStorage.getItem('auth-token');\r\n\r\n  const addRoom = async formData => {\r\n    // console.log(\"From the useRoom hook\", formData)\r\n    setIsLoading(true);\r\n    await axios\r\n      .post(`${BASE_URL}room/create-room`, formData, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        // console.log(response.data.message)\r\n        setIsLoading(false);\r\n        setResponseMessage(response.data.message);\r\n        navigate('/dashboard/rooms');\r\n      })\r\n      .catch(error => {\r\n        setIsLoading(false);\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getRoom = async () => {\r\n    setIsLoading(true);\r\n    await axios\r\n      .get(`${BASE_URL}/room/get`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setIsLoading(false);\r\n        setAllRooms(response.data.data.allRooms);\r\n        setRoomCount(response.data.data.allRooms.length);\r\n        // console.log(\"All rooms\", response.data.data.allRooms)\r\n      })\r\n      .catch(error => {\r\n        setIsLoading(false);\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getRoomById = async (id) => {\r\n    await axios\r\n      .get(`${BASE_URL}/room/get-single?roomId=${id}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setAllRoomsById(response.data.data);\r\n        console.log(\"omah\",response.data.data)\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const updateRoomDetail = async formData => {\r\n    await axios\r\n      .put(`${BASE_URL}room/update-room`, formData, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        // console.log(response.data.message)\r\n        setResponseMessage(response.data.message);\r\n        navigate('/dashboard/rooms');\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // send user back to the login page!\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteRoom = async roomId => {\r\n    await axios\r\n      .delete(`${BASE_URL}room/delete?roomId=${roomId}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        navigate('/dashboard/rooms');\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // send user back to the login page!\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return {\r\n    addRoom,\r\n    responseMessage,\r\n    getRoom,\r\n    allRooms,\r\n    getRoomById,\r\n    allRoomsById,\r\n    updateRoomDetail,\r\n    deleteRoom,\r\n    roomsCount,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useRoom;\r\n","import axios from 'axios';\r\nimport { useState } from 'react';\r\n\r\nconst useWorkHistory = () => {\r\n  const [cleanerSummary, setCleanerSummary] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n//   const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const token = localStorage.getItem('auth-token');\r\n  const getRoomHistory = async (roomId) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}work-history/rooms?roomId=${roomId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      console.log(\"HAS THE DATA BEEN FETCHED?\", res.data.data)\r\n      return res.data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching room history:', error);\r\n      // Handle the error based on your application's needs\r\n      // For example, you might want to return an empty array or null, or throw the error further\r\n      return null; // or throw error;\r\n    }\r\n  };\r\n\r\n  const getInspectorHistory = async (inspectorId) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}work-history/inspector?inspectorId=${inspectorId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      return res.data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching inspector history:', error);\r\n      return null; // or throw error;\r\n    }\r\n  };\r\n\r\n  const getCleanerHistory = async (cleanerId) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}work-history/cleaner?cleanerId=${cleanerId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n       console.log(\"Cleaner history\", res.data.data);\r\n      return res.data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching cleaner history:', error);\r\n      return null; // or throw error;\r\n    }\r\n  };\r\n\r\n  const getCleanerSummary = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/work-history/cleaner-task-summary`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      setCleanerSummary(res.data.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return {\r\n    getCleanerSummary,\r\n    getCleanerHistory,\r\n    getInspectorHistory,\r\n    getRoomHistory,\r\n    cleanerSummary,\r\n    isLoading\r\n  };\r\n};\r\nexport default useWorkHistory;\r\n","import { useState } from 'react';\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst HistoryDetails = ({ name, detailId, historyData }) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleOpenModal = () => setOpenModal(true);\r\n  const handleCloseModal = () => setOpenModal(false);\r\n\r\n  return (\r\n    <div className=\"work-history\">\r\n      <Modal\r\n        open={openModal}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"history-details-modal\"\r\n        aria-describedby=\"history-details-description\"\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            backgroundColor: 'white',\r\n            padding: '2rem',\r\n            borderRadius: '10px',\r\n            boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n            width: '70vw', // Adjust width as needed\r\n            maxHeight: '80vh', // Limit maximum height for scrollability\r\n            overflowY: 'auto' // Enable vertical scrolling when content exceeds maximum height\r\n          }}\r\n        >\r\n          {historyData && historyData.length > 0 ? (\r\n            historyData.map((assignment, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"assignment\"\r\n                style={{ marginBottom: '30px', padding: '10px', backgroundColor: index % 2 === 0 ? '#f3f3f3' : '#e6e6e6' }}\r\n              >\r\n                <Typography variant=\"h5\" className=\"room-name\">\r\n                  Room: {assignment.assigned_room.roomName}\r\n                </Typography>\r\n                <Typography variant=\"body1\" className=\"detail-id\">\r\n                  Detail ID: {detailId}\r\n                </Typography>\r\n                <Typography variant=\"body1\" className=\"status\" style={{ color: assignment.isSubmitted ? '#28a745' : '#dc3545' }}>\r\n                  Status: {assignment.isSubmitted ? 'Submitted' : 'Not Submitted'}\r\n                </Typography>\r\n                <Typography variant=\"h6\" className=\"tasks-heading\">\r\n                  Tasks:\r\n                </Typography>\r\n                {assignment.tasks && assignment.tasks.length > 0 ? (\r\n                  assignment.tasks.map((task, taskIndex) => (\r\n                    <Box key={taskIndex} className=\"task\" style={{ padding: '10px', backgroundColor: task.isDone ? '#d9ead3' : '#f8d7da' }}>\r\n                      <Typography variant=\"body1\" className=\"task-name\" style={{ color: task.isDone ? '#155724' : '#721c24' }}>\r\n                        Task Name: {task.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" className=\"task-status\" style={{ color: task.isDone ? '#155724' : '#721c24' }}>\r\n                        Task Status: {task.isDone ? 'Done' : 'Pending'}\r\n                      </Typography>\r\n                      {task.image !== 'empty' && (\r\n                        <img\r\n                          src={task.image}\r\n                          alt={task.name}\r\n                          className=\"task-image\"\r\n                          style={{ width: '100px', height: '100px', borderRadius: '5px', marginTop: '10px' }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                  ))\r\n                ) : (\r\n                  <Typography variant=\"body1\" className=\"no-tasks\">\r\n                    No tasks available.\r\n                  </Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"body1\" className=\"no-history\">\r\n              No history available.\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n      </Modal>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        margin={5}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bgcolor=\"#f3f3f3\" // Set background color\r\n        padding={2} // Add padding for better spacing\r\n        borderRadius={5} // Add border radius for rounded corners\r\n        boxShadow={3} // Add a subtle shadow for depth\r\n      >\r\n        <Typography variant=\"h3\">{name}</Typography>\r\n        <Button variant=\"outlined\" onClick={handleOpenModal}>\r\n          View History\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryDetails;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport useRoom from '../../../../Hooks/useRoom';\r\nimport useWorkHistory from '../../../../Hooks/useWorkHistory';\r\nimport Loader from 'component/Loader/Loader';\r\n// import RoomHistoryDetails from 'component/History Details/RoomHistoryDetails';\r\nimport HistoryDetails from 'component/History Details/HistoryDetails';\r\nconst RoomHistory = () => {\r\n  const { allRooms, getRoom } = useRoom();\r\n  const { getRoomHistory } = useWorkHistory();\r\n  const [roomHistory, setRoomHistory] = useState({});\r\n  const [isFetched, setIsFetched] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getRoom();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchRoomHistory = async () => {\r\n      if (allRooms.length > 0 && !isFetched) {\r\n        setLoading(true);\r\n        const historyPromises = allRooms.map(room => getRoomHistory(room._id));\r\n        const histories = await Promise.all(historyPromises);\r\n\r\n        const newHistory = {};\r\n        allRooms.forEach((room, index) => {\r\n          newHistory[room._id] = histories[index];\r\n        });\r\n\r\n        setRoomHistory(newHistory);\r\n        setLoading(false);\r\n        setIsFetched(true);\r\n      }\r\n    };\r\n\r\n    fetchRoomHistory();\r\n  }, []);\r\n\r\n\r\n  // console.log(\"History Data,\", roomHistory)\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxHeight: '600px', // Set a max height for the Box\r\n        overflow: 'auto' // Enable scrolling\r\n      }}\r\n    >\r\n      <Typography variant=\"h3\" p={2} gutterBottom>\r\n        Room History\r\n      </Typography>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : allRooms.length > 0 ? (\r\n        allRooms.map(room => {\r\n          {/* console.log('UNDEFINED?????????', roomHistory[room._id]); */}\r\n          return <HistoryDetails key={room._id} name={room.roomName} detailId={room._id} historyData={roomHistory[room._id]} />;\r\n        })\r\n      ) : (\r\n        <Typography variant=\"body1\">No rooms available</Typography>\r\n      )}\r\n    </Box> \r\n  );\r\n};\r\n\r\nexport default RoomHistory;\r\n"],"names":["useRoom","BASE_URL","process","navigate","useNavigate","responseMessage","setResponseMessage","useState","allRooms","setAllRooms","allRoomsById","setAllRoomsById","isLoading","setIsLoading","roomsCount","setRoomCount","access_token","localStorage","getItem","addRoom","async","axios","post","concat","formData","headers","Authorization","then","response","data","message","catch","error","status","console","log","getRoom","get","length","getRoomById","id","updateRoomDetail","put","deleteRoom","delete","roomId","useWorkHistory","cleanerSummary","setCleanerSummary","token","getCleanerSummary","res","getCleanerHistory","cleanerId","getInspectorHistory","inspectorId","getRoomHistory","_ref","name","detailId","historyData","openModal","setOpenModal","_jsxs","className","children","_jsx","Modal","open","onClose","handleCloseModal","style","display","alignItems","justifyContent","Box","sx","backgroundColor","padding","borderRadius","boxShadow","width","maxHeight","overflowY","map","assignment","index","marginBottom","Typography","variant","assigned_room","roomName","color","isSubmitted","tasks","task","taskIndex","isDone","image","src","alt","height","marginTop","margin","bgcolor","Button","onClick","handleOpenModal","RoomHistory","roomHistory","setRoomHistory","isFetched","setIsFetched","loading","setLoading","useEffect","historyPromises","room","_id","histories","Promise","all","newHistory","forEach","fetchRoomHistory","overflow","p","gutterBottom","Loader","HistoryDetails"],"sourceRoot":""}