{"version":3,"file":"static/js/3161.1eb9ac94.chunk.js","mappings":"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","sources":["Hooks/useAuth.js","component/Modals/Modal.jsx","views/Login/Login.js","views/Login/RoleModal.js","views/Login/index.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport JWT from 'jsonwebtoken';\r\nimport { useNavigate } from 'react-router';\r\nimport { useCurrentRole } from 'context/UserRoleContext';\r\nimport { useAuthRolesState } from 'context/AuthRolesContext';\r\nimport { toast, Flip } from \"react-toastify\";\r\n\r\nconst useAuth = () => {\r\n  const { setModal, setToken, setId, setRoles } = useAuthRolesState();\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  console.log(BASE_URL);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { currentRole, setCurrentRole } = useCurrentRole();\r\n  // No longer manage loginState here; it will be managed by AuthProvider via context\r\n\r\n  const login = async (username, password, setIsLoggedIn) => {\r\n    console.log('first');\r\n    // Add setIsLoggedIn as parameter\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.post(\r\n        `${BASE_URL}login`,\r\n        {\r\n          username,\r\n          password\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept-Language': localStorage.getItem('i18nextLng')\r\n          }\r\n        }\r\n      );\r\n\r\n      if (response?.data?.data?.requiredRoleSelection === true) {\r\n        console.log('first one');\r\n        toast.success(\"Complete your login\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"colored\",\r\n          transition: Flip,\r\n        });\r\n        localStorage.setItem('assignedRoles', response?.data?.data?.assignedRoles);\r\n        setRoles(response?.data?.data?.assignedRoles);\r\n        localStorage.setItem('modal', 'modal');\r\n        console.log('its working');\r\n        setModal(true);\r\n        setToken(response?.data?.data?.token);\r\n        setId(response?.data?.data?.userId);\r\n      }\r\n      // console.log('Resty', response?.data);\r\n      // if (response?.data?.data?.requiredRoleSelection === false) {\r\n      //   console.log('first hiiii');\r\n      //   console.log('hety', response?.data?.data?.requiredRoleSelection);\r\n      // }\r\n\r\n      // console.log('Decoded----', decodedResponse);\r\n      // console.log('User Role', loggedInUserRole);\r\n      // console.log('Response data', response.data);\r\n      // console.log('My role buddy', currentRole);\r\n      else if (response?.data?.data?.requiredRoleSelection === false) {\r\n        toast.success(\"Login Successful !!!\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"colored\",\r\n          transition: Flip,\r\n        });\r\n\r\n        const JWT_KEY = process.env.REACT_APP_JWT_KEY;\r\n        const decodedResponse = JWT.decode(response.data.data.token, JWT_KEY);\r\n        const loggedInUserRole = decodedResponse.role_id.role_name;\r\n       \r\n        setCurrentRole(loggedInUserRole);\r\n        console.log(\"rl\",loggedInUserRole)\r\n        // Set auth details in localStorage\r\n        localStorage.setItem('isLoggedIn', 'true'); // Use to maintain session state\r\n        localStorage.setItem('auth-token', response.data.data.token);\r\n        localStorage.setItem('name', response.data.data.username);\r\n        localStorage.setItem('id', response.data.data.userId);\r\n        localStorage.setItem('role', loggedInUserRole);\r\n        setIsLoggedIn(true); // Update global state via context\r\n      } // I'll add a check here when a user has multiple roles\r\n\r\n      // else {\r\n      //   console.log('User not logged in');\r\n      //   navigate('/unauthorized');\r\n      //   return false;\r\n      // }\r\n    } catch (error) {\r\n      // alert(error.message);\r\n      toast.error(error?.response?.data?.message, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"colored\",\r\n        transition: Flip,\r\n      });\r\n      console.log('Error', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Simplify logout function for clarity\r\n  const logout = setIsLoggedIn => {\r\n    // Add setIsLoggedIn as parameter\r\n    localStorage.clear(); // Clears all localStorage, adjust as needed\r\n    setIsLoggedIn(false); // Update global state via context\r\n  };\r\n\r\n  return { login, logout, isLoading };\r\n};\r\n\r\nexport default useAuth;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport { useState } from \"react\";\r\n\r\nconst ModalComponent = ({ isOpen, onClose, children, setIsModalOpen }) => {\r\n  const closeModal = (e) => {\r\n    e.preventDefault();\r\n    setIsModalOpen(false);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n    \r\n\r\n\r\n\r\n  \r\n\r\n      {isOpen && (\r\n\r\n          <div className=\"fixed z-[1000] overflow-y-auto top-20 w-full left-0 \" id=\"modal\">\r\n          <div className=\"flex items-center justify-center min-height-100vh pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 transition-opacity\">\r\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75 z-[1000]\" onClick={closeModal}/>\r\n            </div>\r\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-auto\">&#8203;</span>\r\n            <div className=\"inline-block align-center  bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n\r\n            {children}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        // <div className=\"fixed  md:w-3/4 mx-auto lg:w-1/2 bg-white rounded shadow-lg z-50 \">\r\n        //   <div className=\"  p-8\">\r\n        //     <button\r\n        //       onClick={(e) => closeModal(e)}\r\n        //       className=\"absolute top-0 right-0 m-4 text-gray-500 hover:text-gray-700\"\r\n        //     >\r\n        //       <svg\r\n        //         className=\"w-6 h-6\"\r\n        //         fill=\"none\"\r\n        //         stroke=\"currentColor\"\r\n        //         viewBox=\"0 0 24 24\"\r\n        //       >\r\n        //         <path\r\n        //           strokeLinecap=\"round\"\r\n        //           strokeLinejoin=\"round\"\r\n        //           strokeWidth=\"2\"\r\n        //           d=\"M6 18L18 6M6 6l12 12\"\r\n        //         />\r\n        //       </svg>\r\n        //     </button>\r\n        //     {children}\r\n        //   </div>\r\n        // </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport useAuth from '../../Hooks/useAuth'; // Assuming useAuth hook exists and works correctly\r\nimport Loader from 'component/Loader/Loader';\r\n\r\n// MUI and third-party imports\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormHelperText, TextField, FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton } from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { useAuthState } from 'context/AuthContext';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Login = () => {\r\n  const theme = useTheme();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { login, isLoading } = useAuth();\r\n  const { setIsLoggedIn, isLoggedIn } = useAuthState(); // Get setIsLoggedIn from context\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      localStorage.setItem('isLoggedIn', 'true');\r\n      navigate('/dashboard'); // Adjust the path as needed\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <ToastContainer/>\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        password: '',\r\n        submit: null\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        username: Yup.string().max(255).required('Username is required'),\r\n        password: Yup.string().max(255).required('Password is required')\r\n      })}\r\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n        try {\r\n          const res = await login(values.username, values.password, setIsLoggedIn); // Pass setIsLoggedIn to login\r\n          if (res) {\r\n            setStatus({ success: true });\r\n            setSubmitting(false);\r\n          }\r\n        } catch (error) {\r\n          setStatus({ success: false });\r\n          setErrors({ submit: error.message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n        <form noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            error={Boolean(touched.username && errors.username)}\r\n            fullWidth\r\n            helperText={touched.username && errors.username}\r\n            label=\"Username\"\r\n            margin=\"normal\"\r\n            name=\"username\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            value={values.username}\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <FormControl fullWidth error={Boolean(touched.password && errors.password)} sx={{ mt: theme.spacing(3), mb: theme.spacing(1) }}>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={values.password}\r\n              name=\"password\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n            {touched.password && errors.password && <FormHelperText error>{errors.password}</FormHelperText>}\r\n          </FormControl>\r\n\r\n          {errors.submit && (\r\n            <Box mt={3}>\r\n              <FormHelperText error>{errors.submit}</FormHelperText>\r\n            </Box>\r\n          )}\r\n\r\n          <Box mt={2}>\r\n            <button className=\"text-white flex justify-center  gap-x-2 items-center px-4 py-2 bg-blue-700 w-full lg:h-[40px] text-base border-t-2 border-empWhite\" disabled={isSubmitting}   type=\"submit\" >\r\n              Log In\r\n            </button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  Grid,\r\n  Typography,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Button,\r\n  Box,\r\n  Paper,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  OutlinedInput,\r\n  Checkbox,\r\n  ListItemText,\r\n  Container\r\n} from '@mui/material';\r\nimport { TextareaAutosize as BaseTextareaAutosize } from '@mui/base/TextareaAutosize';\r\nimport { styled } from '@mui/system';\r\nimport Slide from '@mui/material/Slide';\r\nimport Modal from '@mui/material/Modal';\r\nimport React, { useState } from 'react';\r\nimport { useAuthRolesState } from 'context/AuthRolesContext';\r\nimport axios from 'axios';\r\nimport { useCurrentRole } from 'context/UserRoleContext';\r\nimport { useAuthState } from 'context/AuthContext';\r\nimport JWT from 'jsonwebtoken';\r\nimport { Flip, toast } from 'react-toastify';\r\n\r\nconst RoleModal = ({ closeModal }) => {\r\n  const { roles, token,setModal } = useAuthRolesState();\r\n  const { currentRole, setCurrentRole } = useCurrentRole();\r\n  const { setIsLoggedIn, isLoggedIn } = useAuthState();\r\n  console.log('toky', token);\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const Textarea = styled(BaseTextareaAutosize)(\r\n    ({ theme }) => `\r\n        box-sizing: border-box;\r\n        width: 320px;\r\n        font-family: 'IBM Plex Sans', sans-serif;\r\n        font-size: 0.875rem;\r\n        font-weight: 400;\r\n        line-height: 1.5;\r\n        padding: 8px 12px;\r\n        border-radius: 8px;\r\n        color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\r\n        background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\r\n        border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\r\n        box-shadow: 0px 2px 2px ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\r\n    \r\n        &:hover {\r\n          border-color: ${blue[400]};\r\n        }\r\n    \r\n        &:focus {\r\n          border-color: ${blue[400]};\r\n          box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\r\n        }\r\n    \r\n        // firefox\r\n        &:focus-visible {\r\n          outline: 0;\r\n        }\r\n      `\r\n  );\r\n\r\n  const roleSubmit = async data => {\r\n    console.log('first');\r\n    // Add setIsLoggedIn as parameter\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}select-role`, data, {\r\n        headers: {\r\n          // 'Content-Type': 'application/json',\r\n          // 'Accept-Language': localStorage.getItem('i18nextLng'),\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response?.data?.status === true) {\r\n        setModal(false)\r\n        const JWT_KEY = process.env.REACT_APP_JWT_KEY;\r\n        console.log(JWT_KEY);\r\n        const decodedResponse = JWT.decode(response.data.data.token, JWT_KEY);\r\n        //     const loggedInUserRole = decodedResponse.role_id.role_name;\r\n        //    console.log(\"rl\",decodedResponse)\r\n        const newRole = roles.filter(role => role?.role_id == selectedRole);\r\n      \r\n  \r\n        setCurrentRole(newRole[0].role_name);\r\n        // Set auth details in localStorage\r\n        localStorage.setItem('isLoggedIn', 'true'); // Use to maintain session state\r\n        localStorage.setItem('auth-token', response.data.data.token);\r\n        localStorage.setItem('name', response.data.data.username);\r\n        localStorage.setItem('id', response.data.data.userId);\r\n        localStorage.setItem('role', newRole[0].role_name);\r\n        setIsLoggedIn(true); // Update global state via context\r\n      }\r\n      // console.log('Resty', response?.data);\r\n      // if (response?.data?.data?.requiredRoleSelection === false) {\r\n      //   console.log('first hiiii');\r\n      //   console.log('hety', response?.data?.data?.requiredRoleSelection);\r\n      // }\r\n\r\n      // console.log('Decoded----', decodedResponse);\r\n      // console.log('User Role', loggedInUserRole);\r\n      // console.log('Response data', response.data);\r\n      // console.log('My role buddy', currentRole);\r\n      console.log(response);\r\n   \r\n      // else {\r\n      //   console.log('User not logged in');\r\n      //   navigate('/unauthorized');\r\n      //   return false;\r\n      // }\r\n    } catch (error) {\r\n      // alert(error.message);\r\n      toast.error(error?.response?.data?.message, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"colored\",\r\n        transition: Flip,\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = { selectedRoleId: selectedRole };\r\n\r\n    console.log(data);\r\n    roleSubmit(data);\r\n  };\r\n\r\n  console.log(roles);\r\n  return (\r\n    <>\r\n      <Container\r\n      \r\n        sx={{\r\n          p: 4,\r\n          bgcolor: 'background.paper',\r\n          transformOrigin: 'top'\r\n        }}\r\n      >\r\n        <Typography variant=\"h3\" component=\"h2\" gutterBottom>\r\n          You have {roles?.length} roles. Select a Role\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group w-full lg:w-full\">\r\n            <FormControl variant=\"outlined\" fullWidth>\r\n              <InputLabel htmlFor=\"location\"> Choose Role</InputLabel>\r\n              <Select\r\n                id=\"inspector\"\r\n                name=\"inspector\"\r\n                className=\"w-full\"\r\n                value={selectedRole}\r\n                onChange={e => {\r\n                  console.log(e.target.value);\r\n                  setSelectedRole(e.target.value);\r\n                }}\r\n                placeholder=\"Select Inspector\"\r\n                label=\"Inspector\"\r\n                sx={{ marginBottom: 2 }}\r\n              >\r\n                {roles?.map(role => {\r\n                  // const address = `${location.city}, ${location.state}, ${location.country}`;\r\n                  return (\r\n                    <MenuItem key={role?.role_id} value={role?.role_id} className=\"capitalize\">\r\n                      {roles.length === 0 ? 'No roles available' : `${role?.role_name}`}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"p-2 w-full flex justify-end\">\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"text-white flex justify-center  gap-x-2 items-center px-4 py-2 bg-blue-700 w-full lg:h-[40px] text-base border-t-2 border-empWhite\"\r\n            >\r\n              {isLoading ? 'Loading...' : 'Send'}\r\n            </button>{' '}\r\n          </div>\r\n        </form>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleModal;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, Typography, Grid } from '@mui/material';\r\n\r\n// project import\r\nimport AuthLogin from './Login';\r\n\r\n// assets\r\nimport Logo from 'assets/images/msslogo.png';\r\nimport LoginBg from 'assets/images/login-bg.png';\r\nimport RoleModal from './RoleModal';\r\nimport ModalComponent from 'component/Modals/Modal';\r\nimport { useAuthRolesState } from 'context/AuthRolesContext';\r\n\r\n// ==============================|| LOGIN ||============================== //\r\n\r\nconst Login = () => {\r\n  const { modal } = useAuthRolesState();\r\n  const [isModalOpen, setIsModalOpen] = useState(modal);\r\n  const openModal = e => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div\r\n      className=\"flex justify-center items-center h-screen  w-full \"\r\n      style={{ backgroundImage: `url(${LoginBg})`, backgroundPosition: 'center', backgroundSize: 'cover' }}\r\n    >\r\n      {' '}\r\n      <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: '100vh' }}>\r\n        <Grid item xs={11} sm={7} md={6} lg={4}>\r\n          <Card\r\n            sx={{\r\n              overflow: 'visible',\r\n              display: 'flex',\r\n              position: 'relative',\r\n              '& .MuiCardContent-root': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%',\r\n                width: '50%'\r\n              },\r\n              maxWidth: '475px',\r\n              margin: '24px auto'\r\n            }}\r\n          >\r\n            <CardContent sx={{ p: theme.spacing(5, 4, 3, 4) }}>\r\n              <Grid container direction=\"column\" spacing={4} justifyContent=\"center\">\r\n                <Grid item xs={12}>\r\n                  <Grid container justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                      <Typography color=\"textPrimary\" gutterBottom variant=\"h2\">\r\n                        Sign in\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        To Sanitrack\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <RouterLink to=\"/\">\r\n                        <img alt=\"Auth method\" src={Logo} />\r\n                      </RouterLink>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <AuthLogin />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      <ModalComponent isOpen={modal} onClose={closeModal} setIsModalOpen={setIsModalOpen}>\r\n        <RoleModal closeModal={closeModal} />\r\n      </ModalComponent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["useAuth","setModal","setToken","setId","setRoles","useAuthRolesState","BASE_URL","process","console","log","isLoading","setIsLoading","useState","currentRole","setCurrentRole","useNavigate","useCurrentRole","login","async","username","password","setIsLoggedIn","_response$data","_response$data$data","_response$data6","_response$data6$data","response","axios","post","concat","headers","localStorage","getItem","_response$data2","_response$data2$data","_response$data3","_response$data3$data","_response$data4","_response$data4$data","_response$data5","_response$data5$data","data","requiredRoleSelection","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","Flip","setItem","assignedRoles","token","userId","JWT_KEY","loggedInUserRole","JWT","role_id","role_name","error","_error$response","_error$response$data","message","logout","clear","_ref","isOpen","onClose","children","setIsModalOpen","_jsx","_Fragment","className","id","_jsxs","onClick","e","preventDefault","role","Login","useTheme","showPassword","setShowPassword","isLoggedIn","useAuthState","navigate","handleClickShowPassword","handleMouseDownPassword","event","useEffect","Loader","ToastContainer","Formik","initialValues","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","variant","FormControl","sx","mt","spacing","mb","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","IconButton","onMouseDown","edge","Visibility","VisibilityOff","FormHelperText","Box","disabled","closeModal","roles","selectedRole","setSelectedRole","styled","BaseTextareaAutosize","palette","mode","grey","blue","Container","p","bgcolor","transformOrigin","Typography","component","gutterBottom","length","selectedRoleId","Authorization","status","newRole","filter","roleSubmit","Select","target","placeholder","marginBottom","map","MenuItem","modal","isModalOpen","style","backgroundImage","LoginBg","backgroundPosition","backgroundSize","Grid","container","justifyContent","alignItems","minHeight","item","xs","sm","md","lg","Card","overflow","display","flexGrow","flexBasis","width","maxWidth","CardContent","direction","color","RouterLink","to","alt","src","Logo","AuthLogin","ModalComponent","RoleModal"],"sourceRoot":""}