{"version":3,"file":"static/js/9917.fe4a200b.chunk.js","mappings":"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","sources":["Hooks/useStaff.js","Hooks/useWorkHistory.js","component/History Details/HistoryDetails.js","views/Admin/Work History/Cleaner Work History/CleanerHistory.js"],"sourcesContent":["// File contains CRUD operations for staffs\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst useStaff = () => {\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  // const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const navigate = useNavigate();\r\n  const [responseMessage, setResponseMessage] = useState();\r\n  const [allStaffs, setAllStaffs] = useState([]);\r\n  const [staffByName, setStaffByName] = useState([]);\r\n  // const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [allCleaners, setAllCleaners] = useState([]);\r\n  const [allInspectors, setAllInspectors] = useState([]);\r\n\r\n  const access_token = localStorage.getItem('auth-token');\r\n\r\n  const addStaff = async dataToPass => {\r\n    await axios\r\n      .post(`${BASE_URL}create-user`, dataToPass, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setResponseMessage('Staff Added.');\r\n        console.log('Here is staff added response', response.json());\r\n        navigate('/home/user');\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else {\r\n            console.log('Axios error:', data.err.details[0].message);\r\n            alert(data.err.details[0].message);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getStaffById = async userId => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}get-user?userId=${userId}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      });\r\n      const userDetails = response.data; // Adjust based on your user data structure\r\n      // console.log(`User Details for ID ${userId}:`, userDetails);\r\n      return userDetails;\r\n    } catch (error) {\r\n      console.error(`Error fetching user details for ID ${userId}:`, error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getStaffByUserName = async name => {\r\n    await axios\r\n      .get(`${BASE_URL}staff/?userName=${name}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setStaffByName(response.data.data);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occurred', data.message);\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n  const getAllStaffs = async (page, itemPerPage) => {\r\n    setIsLoading(true);\r\n    await axios\r\n      .get(`${BASE_URL}get-all-users?page=${page}&documentCount=${itemPerPage}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setIsLoading(false);\r\n        setAllStaffs(response.data.data.allUsers);\r\n        setTotalPages(Math.ceil(response.data.data.totalUsers / itemPerPage));\r\n      })\r\n      .catch(error => {\r\n        setIsLoading(false);\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occurred', data.message);\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const fireStaff = async staffId => {\r\n    await axios\r\n      .put(\r\n        `${BASE_URL}delete-user`,\r\n        {\r\n          staffId: staffId\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${access_token}` }\r\n        }\r\n      )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        navigate('/home/user');\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occurred', data.message);\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const restoreStaff = async staffId => {\r\n    await axios\r\n      .put(\r\n        `${BASE_URL}update-user-status`,\r\n        {\r\n          staffId: staffId\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${access_token}` }\r\n        }\r\n      )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        navigate('/home/user');\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occurred', data.message);\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n  const getAllCleaners = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}get-all-cleaner`, {\r\n        headers: {\r\n          Authorization: `Bearer ${access_token}`\r\n        }\r\n      });\r\n      console.log('All cleaners', res.data.data.allCleaners);\r\n      setAllCleaners(res.data.data.allCleaners);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getAllInspectors = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}get-all-inspector`, {\r\n        headers: {\r\n          Authorization: `Bearer ${access_token}`\r\n        }\r\n      });\r\n      setAllInspectors(res.data.data.allInspectors);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return {\r\n    addStaff,\r\n    responseMessage,\r\n    getStaffById,\r\n    getStaffByUserName,\r\n    staffByName,\r\n    getAllStaffs,\r\n    allStaffs,\r\n    fireStaff,\r\n    restoreStaff,\r\n    totalPages,\r\n    isLoading,\r\n    getAllCleaners,\r\n    getAllInspectors,\r\n    allCleaners,\r\n    allInspectors\r\n  };\r\n};\r\n\r\nexport default useStaff;\r\n","import axios from 'axios';\r\nimport { useState } from 'react';\r\n\r\nconst useWorkHistory = () => {\r\n  const [cleanerSummary, setCleanerSummary] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n//   const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const token = localStorage.getItem('auth-token');\r\n  const getRoomHistory = async (roomId) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}work-history/rooms?roomId=${roomId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      console.log(\"HAS THE DATA BEEN FETCHED?\", res.data.data)\r\n      return res.data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching room history:', error);\r\n      // Handle the error based on your application's needs\r\n      // For example, you might want to return an empty array or null, or throw the error further\r\n      return null; // or throw error;\r\n    }\r\n  };\r\n\r\n  const getInspectorHistory = async (inspectorId) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}work-history/inspector?inspectorId=${inspectorId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      return res.data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching inspector history:', error);\r\n      return null; // or throw error;\r\n    }\r\n  };\r\n\r\n  const getCleanerHistory = async (cleanerId) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}work-history/cleaner?cleanerId=${cleanerId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n       console.log(\"Cleaner history\", res.data.data);\r\n      return res.data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching cleaner history:', error);\r\n      return null; // or throw error;\r\n    }\r\n  };\r\n\r\n  const getCleanerSummary = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/work-history/cleaner-task-summary`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      setCleanerSummary(res.data.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return {\r\n    getCleanerSummary,\r\n    getCleanerHistory,\r\n    getInspectorHistory,\r\n    getRoomHistory,\r\n    cleanerSummary,\r\n    isLoading\r\n  };\r\n};\r\nexport default useWorkHistory;\r\n","import { useState } from 'react';\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst HistoryDetails = ({ name, detailId, historyData }) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleOpenModal = () => setOpenModal(true);\r\n  const handleCloseModal = () => setOpenModal(false);\r\n\r\n  return (\r\n    <div className=\"work-history\">\r\n      <Modal\r\n        open={openModal}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"history-details-modal\"\r\n        aria-describedby=\"history-details-description\"\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            backgroundColor: 'white',\r\n            padding: '2rem',\r\n            borderRadius: '10px',\r\n            boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n            width: '70vw', // Adjust width as needed\r\n            maxHeight: '80vh', // Limit maximum height for scrollability\r\n            overflowY: 'auto' // Enable vertical scrolling when content exceeds maximum height\r\n          }}\r\n        >\r\n          {historyData && historyData.length > 0 ? (\r\n            historyData.map((assignment, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"assignment\"\r\n                style={{ marginBottom: '30px', padding: '10px', backgroundColor: index % 2 === 0 ? '#f3f3f3' : '#e6e6e6' }}\r\n              >\r\n                <Typography variant=\"h5\" className=\"room-name\">\r\n                  Room: {assignment.assigned_room.roomName}\r\n                </Typography>\r\n                <Typography variant=\"body1\" className=\"detail-id\">\r\n                  Detail ID: {detailId}\r\n                </Typography>\r\n                <Typography variant=\"body1\" className=\"status\" style={{ color: assignment.isSubmitted ? '#28a745' : '#dc3545' }}>\r\n                  Status: {assignment.isSubmitted ? 'Submitted' : 'Not Submitted'}\r\n                </Typography>\r\n                <Typography variant=\"h6\" className=\"tasks-heading\">\r\n                  Tasks:\r\n                </Typography>\r\n                {assignment.tasks && assignment.tasks.length > 0 ? (\r\n                  assignment.tasks.map((task, taskIndex) => (\r\n                    <Box key={taskIndex} className=\"task\" style={{ padding: '10px', backgroundColor: task.isDone ? '#d9ead3' : '#f8d7da' }}>\r\n                      <Typography variant=\"body1\" className=\"task-name\" style={{ color: task.isDone ? '#155724' : '#721c24' }}>\r\n                        Task Name: {task.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" className=\"task-status\" style={{ color: task.isDone ? '#155724' : '#721c24' }}>\r\n                        Task Status: {task.isDone ? 'Done' : 'Pending'}\r\n                      </Typography>\r\n                      {task.image !== 'empty' && (\r\n                        <img\r\n                          src={task.image}\r\n                          alt={task.name}\r\n                          className=\"task-image\"\r\n                          style={{ width: '100px', height: '100px', borderRadius: '5px', marginTop: '10px' }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                  ))\r\n                ) : (\r\n                  <Typography variant=\"body1\" className=\"no-tasks\">\r\n                    No tasks available.\r\n                  </Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"body1\" className=\"no-history\">\r\n              No history available.\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n      </Modal>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        margin={5}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bgcolor=\"#f3f3f3\" // Set background color\r\n        padding={2} // Add padding for better spacing\r\n        borderRadius={5} // Add border radius for rounded corners\r\n        boxShadow={3} // Add a subtle shadow for depth\r\n      >\r\n        <Typography variant=\"h3\">{name}</Typography>\r\n        <Button variant=\"outlined\" onClick={handleOpenModal}>\r\n          View History\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryDetails;\r\n","import { useEffect, useState } from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport HistoryDetails from 'component/History Details/HistoryDetails';\r\nimport useStaff from 'Hooks/useStaff';\r\nimport useWorkHistory from '../../../../Hooks/useWorkHistory';\r\nimport Loader from 'component/Loader/Loader';\r\n\r\nconst CleanerHistory = () => {\r\n  const [loading, setLoading] = useState(true); // Initialize loading state\r\n\r\n  const { getAllCleaners, allCleaners } = useStaff();\r\n  const { getCleanerHistory } = useWorkHistory();\r\n  const [cleanerHistory, setCleanerHistory] = useState({});\r\n  const [isFetched, setIsFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchAllStaffs = async () => {\r\n      await getAllCleaners();\r\n    };\r\n    fetchAllStaffs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchCleanerHistory = async () => {\r\n      if (allCleaners.length > 0 && !isFetched) {\r\n        const historyPromises = allCleaners.map((cleaner) => getCleanerHistory(cleaner._id));\r\n        const histories = await Promise.all(historyPromises);\r\n\r\n        const newHistory = {};\r\n        allCleaners.forEach((cleaner, index) => {\r\n          newHistory[cleaner._id] = histories[index];\r\n        });\r\n\r\n        setCleanerHistory(newHistory);\r\n        setIsFetched(true);\r\n        setLoading(false); // Data fetched\r\n      }\r\n    };\r\n\r\n    fetchCleanerHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h3\" p={2} gutterBottom>\r\n        Cleaner History\r\n      </Typography>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : allCleaners.length > 0 ? (\r\n        allCleaners.map((cleaner) => (\r\n          <HistoryDetails key={cleaner._id} name={cleaner.username} detailId={cleaner._id} historyData={cleanerHistory[cleaner._id]} />\r\n        ))\r\n      ) : (\r\n        <Typography variant=\"body1\">No cleaner history available.</Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default CleanerHistory;\r\n"],"names":["useStaff","BASE_URL","process","navigate","useNavigate","responseMessage","setResponseMessage","useState","allStaffs","setAllStaffs","staffByName","setStaffByName","totalPages","setTotalPages","isLoading","setIsLoading","allCleaners","setAllCleaners","allInspectors","setAllInspectors","access_token","localStorage","getItem","addStaff","async","axios","post","concat","dataToPass","headers","Authorization","then","response","console","log","json","catch","error","status","data","message","err","details","alert","getStaffById","get","userId","getStaffByUserName","name","getAllStaffs","page","itemPerPage","allUsers","Math","ceil","totalUsers","fireStaff","put","staffId","restoreStaff","getAllCleaners","res","getAllInspectors","useWorkHistory","cleanerSummary","setCleanerSummary","token","getCleanerSummary","getCleanerHistory","cleanerId","getInspectorHistory","inspectorId","getRoomHistory","roomId","_ref","detailId","historyData","openModal","setOpenModal","_jsxs","className","children","_jsx","Modal","open","onClose","handleCloseModal","style","display","alignItems","justifyContent","Box","sx","backgroundColor","padding","borderRadius","boxShadow","width","maxHeight","overflowY","length","map","assignment","index","marginBottom","Typography","variant","assigned_room","roomName","color","isSubmitted","tasks","task","taskIndex","isDone","image","src","alt","height","marginTop","margin","bgcolor","Button","onClick","handleOpenModal","CleanerHistory","loading","setLoading","cleanerHistory","setCleanerHistory","isFetched","setIsFetched","useEffect","fetchAllStaffs","historyPromises","cleaner","_id","histories","Promise","all","newHistory","forEach","fetchCleanerHistory","p","gutterBottom","Loader","HistoryDetails","username"],"sourceRoot":""}