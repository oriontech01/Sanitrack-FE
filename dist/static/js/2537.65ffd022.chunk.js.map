{"version":3,"file":"static/js/2537.65ffd022.chunk.js","mappings":"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","sources":["Hooks/useTask.js","views/Admin/Work Order/Tasks.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst useTask = () => {\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  // const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const [responseMessage, setResponseMessage] = useState();\r\n  const [unAssignedRooms, setUnAssignedRooms] = useState([]);\r\n  const [allCleaners, setAllCleaners] = useState([]);\r\n  const [allInspectors, setAllInspectors] = useState([]);\r\n  const [singleTaskDetail, setSingleTaskDetail] = useState([]);\r\n  const [cleaningItems, setCleaningItems] = useState([]);\r\n\r\n  const [allTasks, setAllTasks] = useState([]);\r\n  // eslint-disable-next-line no-unused-vars\r\n\r\n  const [activeCleaners, setActiveCleaners] = useState();\r\n  const [activeInspectors, setActiveInspectors] = useState();\r\n  const [activeCleaningItems,setActiveCleaningItems]=useState()\r\n  const [everyTask, setEveryTask] = useState();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const access_token = localStorage.getItem('auth-token');\r\n\r\n  const getUnAssignedRooms = async () => {\r\n    await axios\r\n      .get(`${BASE_URL}room/unassigned-rooms`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        console.log('====================================');\r\n        console.log(response);\r\n        console.log('====================================');\r\n        setUnAssignedRooms(response.data.data.roomsNotInTasks);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getAllCleaners = async () => {\r\n    await axios\r\n      .get(`${BASE_URL}get-all-cleaner`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setActiveCleaners(response.data.data.allCleaners.length);\r\n        setAllCleaners(response.data.data.allCleaners);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // send user back to the login page!\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getAllInspectors = async () => {\r\n    await axios\r\n      .get(`${BASE_URL}get-all-inspector`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setActiveInspectors(response.data.data.allInspectors.length);\r\n        setAllInspectors(response.data.data.allInspectors);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // navigate('/')\r\n            // send user back to the login page!\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n  const getCleaningItems = async () => {\r\n    await axios\r\n      .get(`${BASE_URL}cleaning-items`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        console.log(\"dang\",response);\r\n        setActiveCleaningItems(response.data.data.allItems.length);\r\n        console.log('aaa====================================');\r\n        console.log(response);\r\n        console.log('====================================');\r\n        setCleaningItems(response.data.data.allItems);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // navigate('/')\r\n            // send user back to the login page!\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network errorasy:', error.message);\r\n        }\r\n      });\r\n  };\r\n  const addTask = async (roomId, cleanerId, inspectorId) => {\r\n    await axios\r\n      .post(\r\n        `${BASE_URL}task/create-task`,\r\n        {\r\n          inspectorId: inspectorId,\r\n          cleanerId: cleanerId,\r\n          roomId: roomId\r\n        },\r\n        { headers: { Authorization: `Bearer ${access_token}` } }\r\n      )\r\n      .then(response => {\r\n        // send user back to the task home page\r\n        navigate('/home/tasks');\r\n        // console.log(response.json())\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getAllTasks = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}task/get`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      });\r\n      //   console.log(\"Task retrieved\", response.data.data);\r\n      setEveryTask(response.data.data.allTasks.length);\r\n      setAllTasks(response.data.data.allTasks);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n        console.log('An error occurred', data.message || 'Error');\r\n        setResponseMessage(data.message || 'Error');\r\n\r\n        if (status === 403) {\r\n          // Use navigate to redirect\r\n          //   navigate('/'); // Make sure navigate is passed correctly if used outside of a component\r\n        }\r\n      } else {\r\n        console.log('Network error:', error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTaskById = async taskId => {\r\n    await axios\r\n      .get(`${BASE_URL}task/get-single-task?taskId=${taskId}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setSingleTaskDetail(response.data.data);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const updateTask = async (taskId, cleanerId, inspectorId, roomId) => {\r\n    await axios\r\n      .put(\r\n        `${BASE_URL}task/update-task`,\r\n        {\r\n          taskId: taskId,\r\n          inspectorId: inspectorId,\r\n          cleanerId: cleanerId,\r\n          roomId: roomId\r\n        },\r\n        { headers: { Authorization: `Bearer ${access_token}` } }\r\n      )\r\n      .then(response => {\r\n        setResponseMessage(response.data.message);\r\n        navigate('/home/tasks');\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n  const deleteTask = async taskId => {\r\n    await axios\r\n      .delete(`${BASE_URL}task/delete-task`, {\r\n        data: { taskId: taskId },\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return {\r\n    getUnAssignedRooms,\r\n    getAllCleaners,\r\n    getAllInspectors,\r\n    unAssignedRooms,\r\n    allCleaners,\r\n    allInspectors,\r\n    addTask,\r\n    getAllTasks,\r\n    allTasks,\r\n    deleteTask,\r\n    activeCleaners,\r\n    everyTask,\r\n    activeInspectors,\r\n    getTaskById,\r\n    singleTaskDetail,\r\n    updateTask,\r\n    responseMessage,\r\n    getCleaningItems,\r\n    cleaningItems,\r\n    activeCleaningItems\r\n  };\r\n};\r\nexport default useTask;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport useTask from '../../../Hooks/useTask';\r\nimport { Grid, Card, CardContent, Typography, Table, TableBody, TableCell, TableHead, TableRow, Button, Paper, TablePagination } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Loader from 'component/Loader/Loader';\r\n\r\nconst Tasks = () => {\r\n  const { getAllTasks, allTasks, deleteTask } = useTask();\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleNavigate = () => {\r\n    navigate('/dashboard/add-task');\r\n  };\r\n\r\n  const handleTaskDelete = async (taskId) => {\r\n    await deleteTask(taskId);\r\n  };\r\n\r\n  const handleTaskEdit = (taskId) => {\r\n    navigate(`/dashboard/edit-task/${taskId}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      setIsLoading(true); // Start loading\r\n      try {\r\n        await getAllTasks(); // Wait for all tasks to be fetched\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch tasks:\", error);\r\n        // Handle any errors here, such as displaying an error message to the user\r\n      }\r\n      setIsLoading(false); // End loading after tasks are fetched\r\n    };\r\n  \r\n    fetchTasks();\r\n  }, []);\r\n  \r\n  if(isLoading){\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n    <Grid item xs={12}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h3\" gutterBottom>\r\n            Tasks\r\n          </Typography>\r\n          <button className=\"text-white flex justify-center  mb-4 gap-x-2 items-center px-4 py-2 bg-blue-700 w-auto lg:h-[40px] text-base border-t-2 \" onClick={handleNavigate}>\r\n            Create New Task\r\n          </button>\r\n          <Paper>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Room name</TableCell>\r\n                  <TableCell>Assigned Supervisor</TableCell>\r\n                  <TableCell>Assigned Cleaner</TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                  <TableCell>Action</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {allTasks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((task) => (\r\n                  <TableRow key={task._id}>\r\n                    <TableCell>{task.roomName.roomName}</TableCell>\r\n                    <TableCell>\r\n                      {`${task.cleanerUsername.username.charAt(0).toUpperCase()}${task.cleanerUsername.username.slice(1)}`}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {`${task.inspectorUsername.username.charAt(0).toUpperCase()}${task.inspectorUsername.username.slice(1)}`}\r\n                    </TableCell>\r\n                    <TableCell className={`status ${task.isSubmitted ? 'done' : ''}`}>\r\n                      {task.isSubmitted ? 'Completed' : 'Pending'}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button color=\"primary\" onClick={() => handleTaskEdit(task.taskId)}>\r\n                        Edit\r\n                      </Button>\r\n                      <Button color=\"secondary\" onClick={() => handleTaskDelete(task._id)}>\r\n                        Delete\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={allTasks.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  </Grid>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["useTask","BASE_URL","process","responseMessage","setResponseMessage","useState","unAssignedRooms","setUnAssignedRooms","allCleaners","setAllCleaners","allInspectors","setAllInspectors","singleTaskDetail","setSingleTaskDetail","cleaningItems","setCleaningItems","allTasks","setAllTasks","activeCleaners","setActiveCleaners","activeInspectors","setActiveInspectors","activeCleaningItems","setActiveCleaningItems","everyTask","setEveryTask","navigate","useNavigate","access_token","localStorage","getItem","getUnAssignedRooms","async","axios","get","concat","headers","Authorization","then","response","console","log","data","roomsNotInTasks","catch","error","status","message","getAllCleaners","length","getAllInspectors","addTask","roomId","cleanerId","inspectorId","post","getAllTasks","deleteTask","delete","taskId","getTaskById","updateTask","put","getCleaningItems","allItems","Tasks","isLoading","setIsLoading","useTheme","page","setPage","rowsPerPage","setRowsPerPage","useEffect","fetchTasks","_jsx","Loader","Grid","container","spacing","children","item","xs","Card","_jsxs","CardContent","Typography","variant","gutterBottom","className","onClick","handleNavigate","Paper","Table","TableHead","TableRow","TableCell","TableBody","slice","map","task","roomName","cleanerUsername","username","charAt","toUpperCase","inspectorUsername","isSubmitted","Button","color","handleTaskEdit","handleTaskDelete","_id","TablePagination","rowsPerPageOptions","component","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","value","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","overflow","raised","elevation","undefined","getTableHeadUtilityClass","TableHeadRoot","display","tablelvl2","defaultComponent","Tablelvl2Context","Provider","role"],"sourceRoot":""}