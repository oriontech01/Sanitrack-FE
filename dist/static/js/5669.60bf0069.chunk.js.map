{"version":3,"file":"static/js/5669.60bf0069.chunk.js","mappings":"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","sources":["Hooks/useRoom.js","Hooks/useTask.js","Hooks/useWorkHistory.js","config.js","views/Admin/Dashboard/chart/Charts.js","views/Admin/Dashboard/ReportCard/index.js","views/Admin/Dashboard/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst useRoom = () => {\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  // const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const navigate = useNavigate();\r\n  const [responseMessage, setResponseMessage] = useState();\r\n  const [allRooms, setAllRooms] = useState([]);\r\n  const [allRoomsById, setAllRoomsById] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [roomsCount, setRoomCount] = useState();\r\n\r\n  const access_token = localStorage.getItem('auth-token');\r\n\r\n  const addRoom = async formData => {\r\n    // console.log(\"From the useRoom hook\", formData)\r\n    setIsLoading(true);\r\n    await axios\r\n      .post(`${BASE_URL}room/create-room`, formData, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        // console.log(response.data.message)\r\n        setIsLoading(false);\r\n        setResponseMessage(response.data.message);\r\n        navigate('/dashboard/rooms');\r\n      })\r\n      .catch(error => {\r\n        setIsLoading(false);\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getRoom = async () => {\r\n    setIsLoading(true);\r\n    await axios\r\n      .get(`${BASE_URL}/room/get`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setIsLoading(false);\r\n        setAllRooms(response.data.data.allRooms);\r\n        setRoomCount(response.data.data.allRooms.length);\r\n        // console.log(\"All rooms\", response.data.data.allRooms)\r\n      })\r\n      .catch(error => {\r\n        setIsLoading(false);\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getRoomById = async (id) => {\r\n    await axios\r\n      .get(`${BASE_URL}/room/get-single?roomId=${id}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setAllRoomsById(response.data.data);\r\n        console.log(\"omah\",response.data.data)\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const updateRoomDetail = async formData => {\r\n    await axios\r\n      .put(`${BASE_URL}room/update-room`, formData, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        // console.log(response.data.message)\r\n        setResponseMessage(response.data.message);\r\n        navigate('/dashboard/rooms');\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // send user back to the login page!\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteRoom = async roomId => {\r\n    await axios\r\n      .delete(`${BASE_URL}room/delete?roomId=${roomId}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        navigate('/dashboard/rooms');\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // send user back to the login page!\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return {\r\n    addRoom,\r\n    responseMessage,\r\n    getRoom,\r\n    allRooms,\r\n    getRoomById,\r\n    allRoomsById,\r\n    updateRoomDetail,\r\n    deleteRoom,\r\n    roomsCount,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useRoom;\r\n","import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst useTask = () => {\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  // const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const [responseMessage, setResponseMessage] = useState();\r\n  const [unAssignedRooms, setUnAssignedRooms] = useState([]);\r\n  const [allCleaners, setAllCleaners] = useState([]);\r\n  const [allInspectors, setAllInspectors] = useState([]);\r\n  const [singleTaskDetail, setSingleTaskDetail] = useState([]);\r\n  const [cleaningItems, setCleaningItems] = useState([]);\r\n\r\n  const [allTasks, setAllTasks] = useState([]);\r\n  // eslint-disable-next-line no-unused-vars\r\n\r\n  const [activeCleaners, setActiveCleaners] = useState();\r\n  const [activeInspectors, setActiveInspectors] = useState();\r\n  const [activeCleaningItems,setActiveCleaningItems]=useState()\r\n  const [everyTask, setEveryTask] = useState();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const access_token = localStorage.getItem('auth-token');\r\n\r\n  const getUnAssignedRooms = async () => {\r\n    await axios\r\n      .get(`${BASE_URL}room/unassigned-rooms`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        console.log('====================================');\r\n        console.log(response);\r\n        console.log('====================================');\r\n        setUnAssignedRooms(response.data.data.roomsNotInTasks);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getAllCleaners = async () => {\r\n    await axios\r\n      .get(`${BASE_URL}get-all-cleaner`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setActiveCleaners(response.data.data.allCleaners.length);\r\n        setAllCleaners(response.data.data.allCleaners);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // send user back to the login page!\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getAllInspectors = async () => {\r\n    await axios\r\n      .get(`${BASE_URL}get-all-inspector`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setActiveInspectors(response.data.data.allInspectors.length);\r\n        setAllInspectors(response.data.data.allInspectors);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // navigate('/')\r\n            // send user back to the login page!\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n  const getCleaningItems = async () => {\r\n    await axios\r\n      .get(`${BASE_URL}cleaning-items`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        console.log(\"dang\",response);\r\n        setActiveCleaningItems(response.data.data.allItems.length);\r\n        console.log('aaa====================================');\r\n        console.log(response);\r\n        console.log('====================================');\r\n        setCleaningItems(response.data.data.allItems);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            console.log('An error with status 403 occured', data.message);\r\n            setResponseMessage(data.message);\r\n            // navigate('/')\r\n            // send user back to the login page!\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network errorasy:', error.message);\r\n        }\r\n      });\r\n  };\r\n  const addTask = async (roomId, cleanerId, inspectorId) => {\r\n    await axios\r\n      .post(\r\n        `${BASE_URL}task/create-task`,\r\n        {\r\n          inspectorId: inspectorId,\r\n          cleanerId: cleanerId,\r\n          roomId: roomId\r\n        },\r\n        { headers: { Authorization: `Bearer ${access_token}` } }\r\n      )\r\n      .then(response => {\r\n        // send user back to the task home page\r\n        navigate('/home/tasks');\r\n        // console.log(response.json())\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getAllTasks = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}task/get`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      });\r\n      //   console.log(\"Task retrieved\", response.data.data);\r\n      setEveryTask(response.data.data.allTasks.length);\r\n      setAllTasks(response.data.data.allTasks);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n        console.log('An error occurred', data.message || 'Error');\r\n        setResponseMessage(data.message || 'Error');\r\n\r\n        if (status === 403) {\r\n          // Use navigate to redirect\r\n          //   navigate('/'); // Make sure navigate is passed correctly if used outside of a component\r\n        }\r\n      } else {\r\n        console.log('Network error:', error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTaskById = async taskId => {\r\n    await axios\r\n      .get(`${BASE_URL}task/get-single-task?taskId=${taskId}`, {\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        setSingleTaskDetail(response.data.data);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const updateTask = async (taskId, cleanerId, inspectorId, roomId) => {\r\n    await axios\r\n      .put(\r\n        `${BASE_URL}task/update-task`,\r\n        {\r\n          taskId: taskId,\r\n          inspectorId: inspectorId,\r\n          cleanerId: cleanerId,\r\n          roomId: roomId\r\n        },\r\n        { headers: { Authorization: `Bearer ${access_token}` } }\r\n      )\r\n      .then(response => {\r\n        setResponseMessage(response.data.message);\r\n        navigate('/home/tasks');\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n  const deleteTask = async taskId => {\r\n    await axios\r\n      .delete(`${BASE_URL}task/delete-task`, {\r\n        data: { taskId: taskId },\r\n        headers: { Authorization: `Bearer ${access_token}` }\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          const { status, data } = error.response;\r\n          if (status === 400 && data && data.message) {\r\n            setResponseMessage(data.message);\r\n            console.log('An error occured', data.message);\r\n          } else if (status === 403 && data && data.message) {\r\n            // navigate('/')\r\n          } else {\r\n            console.log('Axios error:', error);\r\n          }\r\n        } else {\r\n          console.log('Network error:', error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return {\r\n    getUnAssignedRooms,\r\n    getAllCleaners,\r\n    getAllInspectors,\r\n    unAssignedRooms,\r\n    allCleaners,\r\n    allInspectors,\r\n    addTask,\r\n    getAllTasks,\r\n    allTasks,\r\n    deleteTask,\r\n    activeCleaners,\r\n    everyTask,\r\n    activeInspectors,\r\n    getTaskById,\r\n    singleTaskDetail,\r\n    updateTask,\r\n    responseMessage,\r\n    getCleaningItems,\r\n    cleaningItems,\r\n    activeCleaningItems\r\n  };\r\n};\r\nexport default useTask;\r\n","import axios from 'axios';\r\nimport { useState } from 'react';\r\n\r\nconst useWorkHistory = () => {\r\n  const [cleanerSummary, setCleanerSummary] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n//   const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const token = localStorage.getItem('auth-token');\r\n  const getRoomHistory = async (roomId) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}work-history/rooms?roomId=${roomId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      console.log(\"HAS THE DATA BEEN FETCHED?\", res.data.data)\r\n      return res.data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching room history:', error);\r\n      // Handle the error based on your application's needs\r\n      // For example, you might want to return an empty array or null, or throw the error further\r\n      return null; // or throw error;\r\n    }\r\n  };\r\n\r\n  const getInspectorHistory = async (inspectorId) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}work-history/inspector?inspectorId=${inspectorId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      return res.data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching inspector history:', error);\r\n      return null; // or throw error;\r\n    }\r\n  };\r\n\r\n  const getCleanerHistory = async (cleanerId) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}work-history/cleaner?cleanerId=${cleanerId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n       console.log(\"Cleaner history\", res.data.data);\r\n      return res.data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching cleaner history:', error);\r\n      return null; // or throw error;\r\n    }\r\n  };\r\n\r\n  const getCleanerSummary = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/work-history/cleaner-task-summary`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      setCleanerSummary(res.data.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return {\r\n    getCleanerSummary,\r\n    getCleanerHistory,\r\n    getInspectorHistory,\r\n    getRoomHistory,\r\n    cleanerSummary,\r\n    isLoading\r\n  };\r\n};\r\nexport default useWorkHistory;\r\n","// ==============================|| THEME CONSTANT  ||============================== //\r\n\r\nexport const gridSpacing = 3;\r\nexport const drawerWidth = 280;\r\n\r\n// ==============================|| THEME CONFIG  ||============================== //\r\n\r\n// Pro Version\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem, Typography } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst ChartContainer = styled('div')({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  marginTop: 20\r\n});\r\n\r\nconst ChartControls = styled('div')({\r\n  marginBottom: 20\r\n});\r\n\r\nfunction Charts({ data }) {\r\n  const [chartType, setChartType] = useState('bar');\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    destroyChart();\r\n    renderChart();\r\n  }, [data, chartType]);\r\n\r\n  const renderChart = () => {\r\n    const chartData = {\r\n      labels: data.map(cleaner => cleaner.cleanerUsername),\r\n      datasets: [\r\n        {\r\n          label: chartType === 'bar' ? 'Total Rooms Cleaned' : undefined,\r\n          data: data.map(cleaner => cleaner.totalRoomsCleaned),\r\n          backgroundColor:\r\n            chartType === 'bar'\r\n              ? data.map((cleaner, index) => (index % 2 === 0 ? 'rgba(75, 192, 192, 0.2)' : 'rgba(255, 99, 132, 0.2)'))\r\n              : undefined,\r\n          borderColor:\r\n            chartType === 'bar'\r\n              ? data.map((cleaner, index) => (index % 2 === 0 ? 'rgba(75, 192, 192, 1)' : 'rgba(255, 99, 132, 1)'))\r\n              : undefined,\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    };\r\n\r\n    const chartOptions = {\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          max: Math.max(...data.map(data => data.totalRoomsCleaned)),\r\n          ticks: {\r\n            stepSize: 1\r\n          }\r\n        }\r\n      },\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n    };\r\n\r\n    const ctx = document.getElementById('cleanerRoomChart').getContext('2d');\r\n\r\n    if (chartRef.current) {\r\n      chartRef.current.destroy();\r\n    }\r\n\r\n    chartRef.current = new Chart(ctx, {\r\n      type: chartType,\r\n      data: chartData,\r\n      options: chartOptions\r\n    });\r\n  };\r\n\r\n  const destroyChart = () => {\r\n    if (chartRef.current) {\r\n      const ctx = chartRef.current.ctx;\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      chartRef.current.destroy();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChartContainer style={{ margin: '0 auto', marginTop: 50}}>\r\n      <Typography variant=\"h4\" component=\"h4\" gutterBottom style={{ fontWeight: 600, marginBottom: 20 }}>\r\n        Cleaning Data Overview\r\n      </Typography>\r\n      <ChartControls>\r\n        <InputLabel style={{ padding: 2 }} variant=\"h2\">\r\n          Chart Type\r\n        </InputLabel>\r\n        <FormControl>\r\n          <Select\r\n            value={chartType}\r\n            onChange={e => setChartType(e.target.value)}\r\n          >\r\n            <MenuItem value=\"bar\">Bar Chart</MenuItem>\r\n            <MenuItem value=\"pie\">Pie Chart</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </ChartControls>\r\n      <div className=\"chart-background\">\r\n        <canvas id=\"cleanerRoomChart\" width=\"400\" height=\"200\"></canvas>\r\n      </div>\r\n    </ChartContainer>\r\n  );\r\n}\r\n\r\nexport default Charts;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Card, CardContent, Grid, Typography } from '@mui/material';\r\n\r\n// ==============================|| REPORT CARD ||============================== //\r\n\r\nconst ReportCard = ({ primary, secondary, iconPrimary, color, footerData, iconFooter }) => {\r\n  const theme = useTheme();\r\n  const IconPrimary = iconPrimary;\r\n  const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\r\n  const IconFooter = iconFooter;\r\n  const footerIcon = iconFooter ? <IconFooter /> : null;\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography variant=\"h3\" sx={{ color: color }}>\r\n              {primary}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" sx={{ marginTop: '.5rem' }}>\r\n              {secondary}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h2\" sx={{ color: color }}>\r\n              {primaryIcon}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Box sx={{ background: color }}>\r\n        <Grid\r\n          container\r\n          justifyContent=\"space-between\"\r\n          sx={{\r\n            textAlign: 'center',\r\n            padding: theme.spacing(1.2),\r\n            pl: 2.5,\r\n            pr: 2.5,\r\n            color: theme.palette.common.white\r\n          }}\r\n        >\r\n          {/* <Grid item>\r\n            <Typography variant=\"body2\">{footerData}</Typography>\r\n          </Grid> */}\r\n          {/* <Grid item>\r\n            <Typography variant=\"body2\">{footerIcon}</Typography>\r\n          </Grid> */}\r\n        </Grid>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nReportCard.propTypes = {\r\n  primary: PropTypes.string,\r\n  secondary: PropTypes.string,\r\n  iconPrimary: PropTypes.object,\r\n  footerData: PropTypes.string,\r\n  iconFooter: PropTypes.object,\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default ReportCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useTask from 'Hooks/useTask';\r\nimport useWorkHistory from 'Hooks/useWorkHistory';\r\nimport useRoom from 'Hooks/useRoom';\r\nimport Loader from 'component/Loader/Loader';\r\nimport { useCurrentRole } from 'context/UserRoleContext';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Grid, Card, CardHeader, CardContent, Typography, Divider, LinearProgress } from '@mui/material';\r\nimport Charts from './chart/Charts';\r\n\r\n//project import\r\nimport ReportCard from './ReportCard';\r\nimport { gridSpacing } from 'config.js';\r\n\r\n// assets\r\nimport DescriptionTwoTone from '@mui/icons-material/DescriptionTwoTone';\r\nimport { AddTaskSharp, CleaningServicesSharp, RoomSharp, TaskAltOutlined } from '@mui/icons-material';\r\nimport { GroupWorkRounded } from '@mui/icons-material';\r\nimport { SupervisorAccount } from '@mui/icons-material';\r\n\r\n// custom style\r\nconst FlatCardBlock = styled(props => <Grid item sm={6} xs={12} {...props} />)(({ theme }) => ({\r\n  padding: '25px 25px',\r\n  borderLeft: '1px solid' + theme.palette.background.default,\r\n  [theme.breakpoints.down('sm')]: {\r\n    borderLeft: 'none',\r\n    borderBottom: '1px solid' + theme.palette.background.default\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    borderBottom: '1px solid' + theme.palette.background.default\r\n  }\r\n}));\r\n\r\n// ==============================|| DASHBOARD DEFAULT ||============================== //\r\n\r\nconst Default = () => {\r\n  const theme = useTheme();\r\n  const { activeCleaners, activeInspectors, everyTask, getAllCleaners, getAllInspectors, getAllTasks } = useTask();\r\n  const { roomsCount, getRoom } = useRoom();\r\n  const { getCleanerSummary, cleanerSummary } = useWorkHistory();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true); // Start loading before initiating asynchronous operations\r\n\r\n      try {\r\n        // Create an array of promises\r\n        const tasks = [getAllCleaners(), getAllInspectors(), getAllTasks(), getRoom(), getCleanerSummary()];\r\n\r\n        // Await all promises concurrently\r\n        await Promise.all(tasks);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n        // Handle any errors here, such as displaying an error message to the user\r\n      }\r\n\r\n      setIsLoading(false); // End loading after all promises are resolved\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Empty dependency array means this effect runs only once after the initial render\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <Grid container marginTop={2} spacing={gridSpacing}>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item lg={3} sm={6} xs={12}>\r\n            <ReportCard\r\n              primary={activeCleaners}\r\n              secondary=\"All Cleaners\"\r\n              color={theme.palette.warning.main}\r\n              footerData=\"Total Number Of Active Cleaners.\"\r\n              iconPrimary={GroupWorkRounded}\r\n              // iconFooter={TrendingUpIcon}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xs={12}>\r\n            <ReportCard\r\n              primary={activeInspectors}\r\n              secondary=\"All Inspectors\"\r\n              color={theme.palette.error.main}\r\n              footerData=\"Total Number Of Active inspectors.\"\r\n              iconPrimary={SupervisorAccount}\r\n              // iconFooter={TrendingDownIcon}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xs={12}>\r\n            <ReportCard\r\n              primary={everyTask}\r\n              secondary=\"All Tasks\"\r\n              color={theme.palette.success.main}\r\n              footerData=\"All Available Tasks For Cleaners and Inspectors.\"\r\n              iconPrimary={DescriptionTwoTone}\r\n              // iconFooter={TrendingUpIcon}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xs={12}>\r\n            <ReportCard\r\n              primary={roomsCount}\r\n              secondary=\"Total Room Count\"\r\n              color={theme.palette.primary.main}\r\n              footerData=\"All Rooms Listed For Cleaning.\"\r\n              iconPrimary={RoomSharp}\r\n              // iconFooter={TrendingUpIcon}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xs={12}>\r\n            <ReportCard\r\n              primary={5}\r\n              secondary=\"Completed Tasks\"\r\n              color={theme.palette.primary.dark}\r\n              footerData=\"All Completed Tasks.\"\r\n              iconPrimary={TaskAltOutlined}\r\n              // iconFooter={TrendingUpIcon}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xs={12}>\r\n            <ReportCard\r\n              primary={5}\r\n              secondary=\"Cleaning Items\"\r\n              color={theme.palette.action.active}\r\n              footerData=\"Total Number Of Available Cleaning Items.\"\r\n              iconPrimary={CleaningServicesSharp}\r\n              // iconFooter={TrendingUpIcon}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xs={12}>\r\n            <ReportCard\r\n              primary={5}\r\n              secondary=\"Pending Tasks\"\r\n              color={theme.palette.action.focus}\r\n              footerData=\"Total Number Of Available Cleaning Items.\"\r\n              iconPrimary={AddTaskSharp}\r\n              // iconFooter={TrendingUpIcon}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Charts data={cleanerSummary} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Default;\r\n"],"names":["useRoom","BASE_URL","process","navigate","useNavigate","responseMessage","setResponseMessage","useState","allRooms","setAllRooms","allRoomsById","setAllRoomsById","isLoading","setIsLoading","roomsCount","setRoomCount","access_token","localStorage","getItem","addRoom","async","axios","post","concat","formData","headers","Authorization","then","response","data","message","catch","error","status","console","log","getRoom","get","length","getRoomById","id","updateRoomDetail","put","deleteRoom","delete","roomId","useTask","unAssignedRooms","setUnAssignedRooms","allCleaners","setAllCleaners","allInspectors","setAllInspectors","singleTaskDetail","setSingleTaskDetail","cleaningItems","setCleaningItems","allTasks","setAllTasks","activeCleaners","setActiveCleaners","activeInspectors","setActiveInspectors","activeCleaningItems","setActiveCleaningItems","everyTask","setEveryTask","getUnAssignedRooms","roomsNotInTasks","getAllCleaners","getAllInspectors","addTask","cleanerId","inspectorId","getAllTasks","deleteTask","taskId","getTaskById","updateTask","getCleaningItems","allItems","useWorkHistory","cleanerSummary","setCleanerSummary","token","getCleanerSummary","res","getCleanerHistory","getInspectorHistory","getRoomHistory","gridSpacing","drawerWidth","ChartContainer","styled","display","flexDirection","alignItems","marginTop","ChartControls","marginBottom","_ref","chartType","setChartType","chartRef","useRef","useEffect","destroyChart","renderChart","chartData","labels","map","cleaner","cleanerUsername","datasets","label","undefined","totalRoomsCleaned","backgroundColor","index","borderColor","borderWidth","chartOptions","scales","y","beginAtZero","max","Math","ticks","stepSize","responsive","maintainAspectRatio","ctx","document","getElementById","getContext","current","destroy","Chart","type","options","clearRect","canvas","width","height","_jsxs","style","margin","children","_jsx","Typography","variant","component","gutterBottom","fontWeight","InputLabel","padding","FormControl","Select","value","onChange","e","target","MenuItem","className","primary","secondary","iconPrimary","color","footerData","iconFooter","theme","useTheme","IconPrimary","primaryIcon","fontSize","Card","CardContent","Grid","container","justifyContent","item","sx","Box","background","textAlign","spacing","pl","pr","palette","common","white","props","sm","xs","borderLeft","default","breakpoints","down","borderBottom","Default","tasks","Promise","all","fetchData","Loader","lg","ReportCard","warning","main","GroupWorkRounded","SupervisorAccount","success","DescriptionTwoTone","RoomSharp","dark","TaskAltOutlined","action","active","CleaningServicesSharp","focus","AddTaskSharp","Charts"],"sourceRoot":""}